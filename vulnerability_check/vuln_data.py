import json
import gzip
import requests

url = "https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-2022.json.gz"
gzfile = requests.get(url).content
jsondata = gzip.decompress(gzfile)

#file = open('nvdcve-1.1-recent.json', 'r')
#data = json.load(file)
data = json.loads(jsondata)
count = len(data['CVE_Items'])
print(count)

for item in range(count):
    cveID = data['CVE_Items'][item]['cve']['CVE_data_meta']['ID']
    descriptionData = data['CVE_Items'][item]['cve']['description']['description_data'][0]['value']
    impactData = data['CVE_Items'][item]['impact']
    publishDate = data['CVE_Items'][item]['publishedDate']
    lastModifiedDate = data['CVE_Items'][item]['lastModifiedDate']
    
    referenceData = data['CVE_Items'][item]['cve']['references']['reference_data']
    urls = []
    for urlref in range(len(referenceData)):
        url = data['CVE_Items'][item]['cve']['references']['reference_data'][urlref]['url']
        urls.append(url)

    if len(impactData) >= 2 :
        impactScore = data['CVE_Items'][item]['impact']['baseMetricV3']['impactScore']
        confidentialityImpact = data['CVE_Items'][item]['impact']['baseMetricV3']['cvssV3']['confidentialityImpact']
        integrityImpact = data['CVE_Items'][item]['impact']['baseMetricV3']['cvssV3']['integrityImpact']
        availabilityImpact = data['CVE_Items'][item]['impact']['baseMetricV3']['cvssV3']['availabilityImpact']
        baseScore = data['CVE_Items'][item]['impact']['baseMetricV3']['cvssV3']['baseScore']
        baseSeverity = data['CVE_Items'][item]['impact']['baseMetricV3']['cvssV3']['baseSeverity']
    else:
        impactScore = "NA"
        confidentialityImpact = "NA"
        integrityImpact = "NA"
        availabilityImpact = "NA"
        baseScore = "NA"
        baseSeverity = "NA"
    #print(cveID)
    #print(descriptionData)
    #print(impactScore)
    #print(confidentialityImpact)
    #print(integrityImpact)
    #print(integrityImpact)
    #print(baseScore)
    #print(baseSeverity)
    #print("{},{},{},{},{},{},{},{},{},{},{}".format(cveID,publishDate,lastModifiedDate,descriptionData,impactScore,confidentialityImpact,integrityImpact,integrityImpact,baseScore,baseSeverity,urls))
    print("{},{},{},{},{},{},{},{}".format(cveID,publishDate,lastModifiedDate,descriptionData,impactScore,baseScore,baseSeverity,urls))


